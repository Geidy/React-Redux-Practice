{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/Header.js","App.js","reducers/index.js","reducers/SongReducer.js","reducers/SelectedSongReducer.js","index.js"],"names":["SongList","_this","this","props","songs","map","song","react_default","a","createElement","className","key","title","type","onClick","selectSong","renderList","React","Component","connect","state","payload","selectedSong","_ref","duration","Header","App","components_Header","path","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","src_App","document","getElementById","querySelector"],"mappings":"8PAMMA,qMAGQ,IAAAC,EAAAC,KAIZ,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAACC,GAC5B,OACCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,IAAKL,EAAKM,OACzCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAU,SAE/BI,QAAS,kBAAMb,EAAKE,MAAMY,WAAWT,KAFtC,WAMDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbJ,EAAKM,2CASV,OACCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbR,KAAKc,qBA7BaC,IAAMC,YA2CdC,cAPS,SAACC,GACxB,MAAM,CAAEhB,MAAOgB,EAAMhB,QAMkB,CAACW,WC9Cf,SAAAT,GACtB,MAAM,CAEFO,KAAM,gBACNQ,QAASf,KD0CFa,CAAuCnB,GErBvCmB,cANS,SAACC,GACrB,MAAM,CACFd,KAAMc,EAAME,eAILH,CAzBI,SAAAI,GAAc,IAAXjB,EAAWiB,EAAXjB,KAClB,OAAKA,EAMDC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,oBADJ,IACoBH,EAAKM,MACrBL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sBAHJ,IAGsBH,EAAKkB,WAV3BjB,EAAAC,EAAAC,cAAA,iCCOGgB,EAVA,WACX,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,8ECkBGiB,EAnBH,WACX,OACCnB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACkB,EAAD,CAAQC,KAAK,uBAEdrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAACoB,EAAD,OAEDtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAACqB,EAAD,mBCVUC,cAAgB,CAC3B3B,MCNuB,WAC1B,MAAO,CACN,CAAEQ,MAAO,YAAaY,SAAU,QAChC,CAAEZ,MAAO,WAAaY,SAAU,QAChC,CAAEZ,MAAO,WAAYY,SAAU,QAC/B,CAAEZ,MAAO,SAAUY,SAAU,UDE3BF,aEP+B,WAAiC,IAAhCA,EAAgCU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,MAAoB,kBAAhBC,EAAOtB,KACAsB,EAAOd,QAGXC,KCKXc,IAASC,OAAO9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAAWlC,EAAAC,EAAAC,cAACiC,EAAD,OAAoBC,SAASC,eAAe,SACpGD,SAASE,cAAc","file":"static/js/main.cdf16de7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { statement } from '@babel/template';\r\nimport { selectSong } from '../actions';\r\nimport style from '../css/style.css';\r\n\r\nclass SongList extends React.Component {\r\n\r\n\r\n\trenderList() {\r\n\t\t\r\n\t\t//const SONGS = [{ title: \"Song 1\" }, { title: \"Song 2\" }, { title: \"Song 3\" }]\r\n\r\n\t\treturn this.props.songs.map((song) => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"grid-container\" key={song.title}>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<button type=\"button\" className=\"button\"\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tonClick={() => this.props.selectSong(song)}>\r\n\t\t\t\t\t\t\tSelect\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t\t{song.title}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t{this.renderList()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn{ songs: state.songs }\r\n};\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {selectSong})(SongList);","\r\n\r\n//this action is gonna trigger the selected song\r\nexport const selectSong = song => {\r\n    return{\r\n\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({ song }) => {\r\n    if (!song) {\r\n        return(\r\n            <div> Select a song! </div>\r\n        );\r\n    }\r\n    return (\r\n        <div> \r\n            <h3> Song Details:</h3>\r\n            <hr />\r\n            <p>\r\n                <b>Title: </b> {song.title}\r\n                <br />\r\n                <b>Duration:</b> {song.duration}\r\n            </p> \r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        song: state.selectedSong\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\r\nimport style from '../css/style.css';\r\n\r\nconst Header = () => {\r\n    return(\r\n        <div className=\"header\">\r\n            <h1>React-Redux practice tracking state through song selection...!</h1>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport SongList from './components/SongList';\nimport SongDetail from './components/SongDetail';\nimport Header from './components/Header';\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Header path=\"./component/Header\"/>\n\t\t\n\t\t<div className=\"grid-container\"> \n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<SongList />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\"> \n\t\t\t\t\t<SongDetail />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t);  \n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { SongReducer } from './SongReducer';\r\nimport { SelectedSongReducer } from './SelectedSongReducer';\r\n\r\n\r\n//we have two reducers that are combined bec we wanna track state of boths.\r\nexport default combineReducers({\r\n    songs: SongReducer, \r\n    selectedSong: SelectedSongReducer\r\n})\r\n","\r\nexport const SongReducer = () => {\r\n\treturn [\r\n\t { title: 'No Scrubs', duration: '4:05' },\r\n\t { title: 'Macarena' , duration: '2:30'},\r\n\t { title: 'All Star', duration: '3:15' },\r\n\t { title: 'I Know', duration: '5:40'}\r\n\t];\r\n};\r\n\r\n","\r\nexport const SelectedSongReducer = (selectedSong = null, action) => {\r\n    if (action.type === 'SONG_SELECTED'){\r\n        return action.payload;\r\n    }\r\n\r\n    return selectedSong; \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducers from './reducers';\n\n\n\nReactDOM.render(<Provider store={createStore(reducers)}><App /></Provider>, document.getElementById('root'));\ndocument.querySelector('#root')\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}